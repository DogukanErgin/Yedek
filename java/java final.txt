public class RobotCoinCollection {
    
    
   public double maxValue(int [][] plane) {
        int[][]yeniarray=new int[plane.length][plane[0].length];

        int maxpara = 0;
        int i = 0;
        int j = 0;


        for (int k = 0; k < plane.length; k++) {
            if (plane[i][j] >= 0) {
                maxpara = plane[i][j] + maxpara;
                yeniarray[i][j] = maxpara;
                i++;
            }
        }
        maxpara=0;
        for (int k = 0; k < plane[0].length; k++) {
            if (plane[i][j] >= 0) {
                maxpara = plane[i][j] + maxpara;
                yeniarray[i][j] = maxpara;
                j++;
            }
        }
        maxpara=0;
        int x = 1;
        int y = 1;
        for (int m=0;m<plane.length-y;m++) {

            for (int k = 0; k < plane[0].length - x; k++) {
                if (yeniarray[x - 1][y] >= yeniarray[x][y - 1]) {
                    yeniarray[x][y] = yeniarray[x - 1][y] + yeniarray[x][y];
                    yeniarray[x][y]=maxpara;
                    y++;
                } else {
                    yeniarray[x][y] = yeniarray[x][y - 1] + yeniarray[x][y];
                    yeniarray[x][y]=maxpara;
                    y++;
                }
            }


            for (int j = 0; j < plane.length - y; j++) {
                if (yeniarray[x - 1][y] >= yeniarray[x][y - 1]) {
                    yeniarray[x][y] = yeniarray[x - 1][y] + yeniarray[x][y];
                    yeniarray[x][y]=maxpara;
                    x++;
                } else {
                    yeniarray[x][y] = yeniarray[x][y - 1] + yeniarray[x][y];
                    yeniarray[x][y]=maxpara;
                    x++;
                }
            }

            y++;
        }
        for (int n=0;n<plane[0].length-x;n++){
            for (int k = 0; k < plane[0].length - x; k++) {
                if (yeniarray[x - 1][y] >= yeniarray[x][y - 1]) {
                    yeniarray[x][y] = yeniarray[x - 1][y] + yeniarray[x][y];
                    yeniarray[x][y]=maxpara;
                    y++;
                } else {
                    yeniarray[x][y] = yeniarray[x][y - 1] + yeniarray[x][y];
                    yeniarray[x][y]=maxpara;
                    y++;
                }
            }


            for (int j = 0; j < plane.length - y; j++) {
                if (yeniarray[x - 1][y] >= yeniarray[x][y - 1]) {
                    yeniarray[x][y] = yeniarray[x - 1][y] + yeniarray[x][y];
                    yeniarray[x][y]=maxpara;
                    x++;
                } else {
                    yeniarray[x][y] = yeniarray[x][y - 1] + yeniarray[x][y];
                    yeniarray[x][y]=maxpara;
                    yeniarray[x][y]=maxpara;
                    x++;
                }
            }

            x++;
        }
        return maxpara;
    }}




Y4EDEKYEEDEKDEKDEKKEKE
public class RobotCoinCollection {
    
    
   public double maxValue(int [][] plane) {
        int[][]yeniarray=new int[plane.length][plane[0].length];

        int maxpara = 0;
        int i = 0;
        int j = 0;


        for (int k = 0; k < plane.length; k++) {
            if (plane[i][j] >= 0) {
                maxpara = plane[i][j] + maxpara;
                yeniarray[i][j] = maxpara;
                i++;
            }
        }
        maxpara=0;
        for (int k = 0; k < plane[0].length; k++) {
            if (plane[i][j] >= 0) {
                maxpara = plane[i][j] + maxpara;
                yeniarray[i][j] = maxpara;
                  j++;
            }
          
        }
        maxpara=0;
        int x = 1;
        int y = 1;
        for (int m=0;m<plane.length-y;m++) {

            for (int k = 0; k < plane[0].length - x; k++) {
                if (yeniarray[x - 1][y] >= yeniarray[x][y - 1]) {
                    yeniarray[x][y] = yeniarray[x - 1][y] + yeniarray[x][y];
                    yeniarray[x][y]=maxpara;
                    y++;
                } else {
                    yeniarray[x][y] = yeniarray[x][y - 1] + yeniarray[x][y];
                    yeniarray[x][y]=maxpara;
                    y++;
                }
            }


            for (int z = 0; z < plane.length - y; z++) {
                if (yeniarray[x - 1][y] >= yeniarray[x][y - 1]) {
                    yeniarray[x][y] = yeniarray[x - 1][y] + yeniarray[x][y];
                    yeniarray[x][y]=maxpara;
                    x++;
                } else {
                    yeniarray[x][y] = yeniarray[x][y - 1] + yeniarray[x][y];
                    yeniarray[x][y]=maxpara;
                    x++;
                }
            }

            y++;
        }
        for (int n=0;n<plane[0].length-x;n++){
            for (int k = 0; k < plane[0].length - x; k++) {
                if (yeniarray[x - 1][y] >= yeniarray[x][y - 1]) {
                    yeniarray[x][y] = yeniarray[x - 1][y] + yeniarray[x][y];
                    yeniarray[x][y]=maxpara;
                    y++;
                } else {
                    yeniarray[x][y] = yeniarray[x][y - 1] + yeniarray[x][y];
                    yeniarray[x][y]=maxpara;
                    y++;
                }
            }


            for (int t = 0; t < plane.length - y; t++) {
                if (yeniarray[x - 1][y] >= yeniarray[x][y - 1]) {
                    yeniarray[x][y] = yeniarray[x - 1][y] + yeniarray[x][y];
                    yeniarray[x][y]=maxpara;
                    x++;
                } else {
                    yeniarray[x][y] = yeniarray[x][y - 1] + yeniarray[x][y];
                    yeniarray[x][y]=maxpara;
                    yeniarray[x][y]=maxpara;
                    x++;
                }
            }

            x++;
        }





        return maxpara;


    }}

public class RobotCoinCollection {
    
    
   public double maxValue(int [][] plane) {
     int [][] dizi = new int[plane.length][plane[0].length];

    int önceki;
    dizi[0][0] = plane[0][0];

    for(int j=1;j<plane[0].length;j++) {
                                        
        plane[0][j]= dizi[0][j-1]+plane[0][j];
    }
    System.out.println("(0,0)");
    for(int i = 1; i<plane.length;i++) {
        dizi[i][0] = dizi[i-1][0]+ plane[i][0]; 

        for(int j=1;j<plane[0].length;j++) {
            if(dizi[i-1][j] > dizi[i][j-1]) 
                önceki = dizi[i-1][j];

            else önceki =  dizi[i][j-1];


            dizi[i][j] = önceki + plane[i][j];
        }
    }


    return dizi[plane.length-1][plane[0].length-1];

}   }